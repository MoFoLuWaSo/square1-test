name: Deploy Web Blog Environment

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'eu-central-1'
        keypair:
          description: 'SSH Key Pair'
          required: true
        ImageId:
          description: 'Amazon Linux Image Id'
          required: true
        VpcCIDR:
          description: 'VPC Cidr'
          default: '192.168.0.0/22'
          required: true
        PublicSubnet1CIDR:
          description: 'Subnet 1 Cidr'
          default: '192.168.0.0/24'
          required: true
        PublicSubnet2CIDR:
          description: 'Subnet 2 Cidr'
          default: '192.168.2.0/23'
          required: true
        GitHubUrl:
          description: 'GitHub Url'
          default: 'https://github.com/MoFoLuWaSo/square1-test.git'
          required: true

jobs:
  deploy-webblog:
    name: Deploy Web Blog stack to AWS
    runs-on: ubuntu-latest
#    outputs:
#      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region}}

      - name: Deploy Cloud Formation Stack
        id: webblog-environment
        uses: aws-actions/aws-cloudformation-github-deploy@master
        with:
          name: WebBlogStack
          template: cloudFormation/WebBlogTemplate.template
          no-fail-on-empty-changeset: "1"
          parameter-overrides: >-
            KeyPair=${{ github.event.inputs.keypair }},
            ImageId=${{ github.event.inputs.ImageId }},
            VpcCIDR=${{ github.event.inputs.VpcCIDR }},
            PublicSubnet1CIDR=${{ github.event.inputs.PublicSubnet1CIDR }},
            PublicSubnet2CIDR=${{ github.event.inputs.PublicSubnet2CIDR }},
            DBName=${{ secrets.AWS_SECRET_ACCESS_KEY }},
            DBUserName=${{ secrets.AWS_SECRET_ACCESS_KEY }},
            DBPassword=${{ secrets.AWS_SECRET_ACCESS_KEY }},
            GitHubUrl=${{ github.event.inputs.GitHubUrl }}


